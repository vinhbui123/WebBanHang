// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebBanHang.Model;

#nullable disable

namespace WebBanHang.Migrations
{
    [DbContext(typeof(WebBanHangContext))]
    partial class WebBanHangContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PromotionDetail", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_id");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int")
                        .HasColumnName("Promotion_id");

                    b.HasKey("ProductId", "PromotionId")
                        .HasName("PK__Promotio__B59CD77B20ED1BBC");

                    b.HasIndex("PromotionId");

                    b.ToTable("Promotion_detail", (string)null);
                });

            modelBuilder.Entity("WebBanHang.ModelViews.SignUpVM", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("CustomerId");

                    b.ToTable("SignUpVM");
                });

            modelBuilder.Entity("WebBanHang.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("Account_id");

                    b.Property<string>("AcccountName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Acccount_name");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("Role_id");

                    b.HasKey("AccountId")
                        .HasName("PK__Accounts__B19D418180E11429");

                    b.HasIndex("RoleId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("WebBanHang.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("Customer_id");

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("Account_id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Full_name");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__8CB382B17A7ACEF6");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("WebBanHang.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("Customer_id");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date")
                        .HasColumnName("Order_date");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Order_status");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int")
                        .HasColumnName("Payment_method_id");

                    b.Property<bool>("Ship")
                        .HasColumnType("bit");

                    b.Property<string>("ShippingAddresses")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("Store_id");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Total_price");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__F1FF8453DB41E1DD");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebBanHang.Models.OrderItem", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_id");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_id");

                    b.Property<decimal>("ListPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("List_price");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "OrderId")
                        .HasName("PK__Order_it__B72C07D7377BC9DF");

                    b.HasIndex("OrderId");

                    b.ToTable("Order_items", (string)null);
                });

            modelBuilder.Entity("WebBanHang.Models.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int")
                        .HasColumnName("Payment_method_id");

                    b.Property<string>("PaymentMethodName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Payment_method_name");

                    b.Property<string>("Thumb")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("PaymentMethodId")
                        .HasName("PK__PaymentM__7BB1893189B907B3");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("WebBanHang.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_id");

                    b.Property<string>("Brand")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cover")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Model")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly>("ModelYear")
                        .HasColumnType("date")
                        .HasColumnName("Model_year");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("PriceDiscounts")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Price_discounts");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Product_name");

                    b.Property<string>("ProductStatus")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Product_status");

                    b.Property<string>("SpecialStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Special_status");

                    b.Property<string>("Tag")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Thumb")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("Type_id");

                    b.Property<int>("UnitInStock")
                        .HasColumnType("int")
                        .HasColumnName("Unit_In_Stock");

                    b.Property<string>("Videos")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ProductId")
                        .HasName("PK__Products__9833FF92F2B33347");

                    b.HasIndex("TypeId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WebBanHang.Models.Promotion", b =>
                {
                    b.Property<int>("PromotionId")
                        .HasColumnType("int")
                        .HasColumnName("Promotion_id");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly>("EndDay")
                        .HasColumnType("date")
                        .HasColumnName("End_day");

                    b.Property<decimal>("PromotionDiscounts")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Promotion_discounts");

                    b.Property<string>("PromotionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Promotion_name");

                    b.Property<DateOnly>("StartDay")
                        .HasColumnType("date")
                        .HasColumnName("Start_day");

                    b.Property<string>("Thumb")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("PromotionId")
                        .HasName("PK__Promotio__DAF28E93FAB1361C");

                    b.ToTable("Promotion", (string)null);
                });

            modelBuilder.Entity("WebBanHang.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("Role_id");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Role_name");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__D80BB0936EF7B4C3");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("WebBanHang.Models.Ship", b =>
                {
                    b.Property<int>("ShipId")
                        .HasColumnType("int")
                        .HasColumnName("Ship_id");

                    b.Property<DateOnly>("ExpectedDeliveryDate")
                        .HasColumnType("date");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date")
                        .HasColumnName("Order_date");

                    b.Property<string>("ShipStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Ship_status");

                    b.Property<int>("ShipperId")
                        .HasColumnType("int")
                        .HasColumnName("Shipper_id");

                    b.Property<string>("ShippingAddresses")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("ShipId")
                        .HasName("PK__Ship__58D18D03B13AB971");

                    b.HasIndex("ShipperId");

                    b.ToTable("Ship", (string)null);
                });

            modelBuilder.Entity("WebBanHang.Models.Stock", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("Store_id");

                    b.HasKey("ProductId")
                        .HasName("PK__Stocks__9833FF9283BB5277");

                    b.HasIndex("StoreId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("WebBanHang.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("Store_id");

                    b.Property<string>("StoreAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Store_address");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Store_name");

                    b.Property<string>("Thumb")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("StoreId")
                        .HasName("PK__Stores__A0F06719F7B7A63D");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("WebBanHang.Models.TypeProduct", b =>
                {
                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("Type_id");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Type_name");

                    b.HasKey("TypeId")
                        .HasName("PK__Type_Pro__FE91E1E6E9F69A32");

                    b.ToTable("Type_Product", (string)null);
                });

            modelBuilder.Entity("PromotionDetail", b =>
                {
                    b.HasOne("WebBanHang.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("products_promotion_detail_fk");

                    b.HasOne("WebBanHang.Models.Promotion", null)
                        .WithMany()
                        .HasForeignKey("PromotionId")
                        .IsRequired()
                        .HasConstraintName("promotion_promotion_detail_fk");
                });

            modelBuilder.Entity("WebBanHang.Models.Account", b =>
                {
                    b.HasOne("WebBanHang.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("role_accounts_fk");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WebBanHang.Models.Order", b =>
                {
                    b.HasOne("WebBanHang.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("customers_orders_fk");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WebBanHang.Models.OrderItem", b =>
                {
                    b.HasOne("WebBanHang.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("orders_order_items_fk");

                    b.HasOne("WebBanHang.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("products_order_items_fk");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebBanHang.Models.Product", b =>
                {
                    b.HasOne("WebBanHang.Models.TypeProduct", "Type")
                        .WithMany("Products")
                        .HasForeignKey("TypeId")
                        .IsRequired()
                        .HasConstraintName("type_product_products_fk");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("WebBanHang.Models.Ship", b =>
                {
                    b.HasOne("WebBanHang.Models.Order", "Shipper")
                        .WithMany("Ships")
                        .HasForeignKey("ShipperId")
                        .IsRequired()
                        .HasConstraintName("orders_ship_fk");

                    b.Navigation("Shipper");
                });

            modelBuilder.Entity("WebBanHang.Models.Stock", b =>
                {
                    b.HasOne("WebBanHang.Models.Product", "Product")
                        .WithOne("Stock")
                        .HasForeignKey("WebBanHang.Models.Stock", "ProductId")
                        .IsRequired()
                        .HasConstraintName("products_stocks_fk");

                    b.HasOne("WebBanHang.Models.Store", "Store")
                        .WithMany("Stocks")
                        .HasForeignKey("StoreId")
                        .IsRequired()
                        .HasConstraintName("stores_stocks_fk");

                    b.Navigation("Product");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("WebBanHang.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WebBanHang.Models.Order", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("Ships");
                });

            modelBuilder.Entity("WebBanHang.Models.Product", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("WebBanHang.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("WebBanHang.Models.Store", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("WebBanHang.Models.TypeProduct", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
